[{"C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\components\\Menu.js":"4","C:\\Users\\Administrator\\Desktop\\csiaF\\src\\index.js":"5","C:\\Users\\Administrator\\Desktop\\csiaF\\src\\App.js":"6","C:\\Users\\Administrator\\Desktop\\csiaF\\src\\reportWebVitals.js":"7","C:\\Users\\Administrator\\Desktop\\csiaF\\src\\components\\Menu.js":"8"},{"size":500,"mtime":1612070296626,"results":"9","hashOfConfig":"10"},{"size":3402,"mtime":1612669610724,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612070296657,"results":"12","hashOfConfig":"10"},{"size":22421,"mtime":1612669613840,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1612070296626,"results":"14","hashOfConfig":"15"},{"size":3402,"mtime":1612669610724,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1612070296657,"results":"17","hashOfConfig":"15"},{"size":22421,"mtime":1612669613840,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"811gmi",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"z6a315",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\index.js",[],["39","40"],"C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\App.js",["41","42"],"C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Desktop\\csia2 proj folder\\csia2-master\\frontend\\src\\components\\Menu.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"C:\\Users\\Administrator\\Desktop\\csiaF\\src\\index.js",[],["80","81"],"C:\\Users\\Administrator\\Desktop\\csiaF\\src\\App.js",["82","83"],"import React from 'react';\nimport './App.css';\n\nimport Menu from './components/Menu';\nimport axios from 'axios';\n\nconst domain = 'http://3.12.162.222'\n//const domain = 'http://localhost:8080'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // 0 - notes, 1 - flascard\n      mode: 0,\n      login: false,\n      wrongPassword: false,\n      password: '',\n\n    }\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.login = this.login.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.loginStatus = this.loginStatus.bind(this);\n    this.passwordFieldChange = this.passwordFieldChange.bind(this);\n  };\n\n\n  toggleMenu(x){\n    this.setState({mode:x})\n  }\n\n  async componentDidMount(){\n    this.loginStatus();\n  }\n\n\n  login = async(e)=>{\n    e.preventDefault();\n    \n    axios.post(domain+'/login',{password:this.state.password})\n      .then(res => {\n        this.setState({password:''})\n        if(res.data.passwordCorrect){\n          this.setState({login:true})\n        }else{\n          this.setState({wrongPassword:true})\n        }\n\n\n      })\n      .catch(err =>{\n        this.setState({password:''})\n        console.log(err)\n      })\n  }\n\n  loginStatus= async()=>{\n    axios.get(domain+'/loggedIn')\n      .then(res =>{\n        if(res.data.login_status){\n          this.setState({login:true})\n        }else{\n          this.setState({login:false})\n        }\n      })\n      .catch(err =>{\n        console.log(err)\n      })\n  }\n\n  passwordFieldChange(e){\n    this.setState({password:e.target.value})\n  }\n  \n  logOut =async()=>{\n    axios.post(domain+'/logout')\n    .then(res=> {\n      this.setState({login:res.data.login_status, wrongPassword:false, password:''})\n    })\n    .catch(err =>{\n      console.log(err)\n    })\n  }\n  \n  render(){\n    return(\n      <div onLoad = {()=>this.loginStatus()}>\n\n        <button onClick={()=>this.logOut()}class=\"logoutButton\" style={this.state.login?{display:'grid'}:{display:'none'}}><p>Log out</p></button>\n\n        {this.state.login==true?(\n                <div className='contentWrapper'>\n        \n                <div className='sideBar' style={this.state.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n                  <button style={{alignSelf:'flex-end'}} onClick={()=>this.toggleMenu(0)}>Notes</button>\n                  <button onClick={()=>this.toggleMenu(1)}>Flashcards</button>   \n                </div>\n        \n                {/* blank div for grid column block... */}\n                <div></div> \n        \n                <Menu mode={this.state.mode} loggedIn={this.state.loggedIn}/>\n              </div>\n        ):(\n          <div class=\"loginWrapper\">\n            <p style={{width:'max-content',justifySelf:'center',fontSize:'20px'}}>Welcome Back</p>\n            <form onSubmit={this.login}\n             style={this.state.wrongPassword?{background: 'linear-gradient(white 0%,white 50%, red 50%, red 100%)',borderColor:'red'}:{background: 'linear-gradient(white 0%,white 50%, blue 50%, blue 100%)',borderColor:'blue'}}>\n              <textarea placeholder={!this.state.wrongPassword?('Enter Password'):('Incorrect Password')} value={this.state.password} onChange={this.passwordFieldChange}></textarea>\n              <button type='submit'>login</button>\n            </form>   \n\n          </div>\n        )}\n\n      </div>\n      \n\n\n    )\n  }\n}\n\nexport default App;\n","C:\\Users\\Administrator\\Desktop\\csiaF\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Desktop\\csiaF\\src\\components\\Menu.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React from 'react';\nimport './Menu.css';\nimport uniqid from 'uniqid'\nimport axios from 'axios';\n\nconst domain = 'http://3.12.162.222'\n//const domain = 'http://localhost:8080'\n\nclass Menu extends React.Component {\n  \n  \n  constructor(props){\n    super(props)\n    this.state = {\n        loggedIn: this.props.loggedIn,\n        loadingData: true,\n        subjects:null,\n        newSubject:'',\n\n\n        subjectFocus:false,\n        subjectData: null,\n        activeSubject: 0,\n        activeTopic: 0,\n\n        addSubjectMode: false,\n        addSubject:'',\n        deleteSubjectMode: false,\n\n        addSubtopicMode: false,\n        addSubtopic:'',\n        \n\n        keywords: ['is','are','because'],\n\n        editMode: false,\n        editValues: [], //for editing input in react...\n        editingObj: -1,\n        editPos: [0,0],  \n        newEdit: false,\n        newEditValue: '',\n\n        flashcardMode: false,\n        flashcardDeck:[],\n        activeDeck: 0,\n        openDeck: false,\n        flashcardZPos: [],\n        doneCards: [],\n        doneCount:0,\n        cardReveal:false\n\n    }\n    this.addSubject = this.addSubject.bind(this);\n    // this.cancelAddSubject.bind = this.cancelAddSubject.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.changeEditValue = this.changeEditValue.bind(this);\n    this.updateSubjects = this.updateSubjects.bind(this);\n\n\n    this.addSubtopic = this.addSubtopic.bind(this);\n    this.removeSubtopic = this.removeSubtopic.bind(this);\n\n    this.updateSubtopics = this.updateSubtopics.bind(this);\n    this.removeSubject = this.removeSubject.bind(this);\n    this.addEditObj = this.addEditObj.bind(this);\n    this.loadFlashcardDeck = this.loadFlashcardDeck.bind(this);\n    this.rotateFlashcard = this.rotateFlashcard.bind(this);\n\n  }\n\n  handleChange(x,event){\n    let currentValues = this.state.editValues;\n    currentValues[x] = event.target.value;\n\n    this.setState({editValues:currentValues, editingObj:x, editPos:[event.target.selectionStart,event.target.selectionEnd]})\n\n  }\n\n  addSubject(e){\n    this.setState({addSubject:e.target.value})\n  }\n\n  addSubtopic(e){\n    this.setState({addSubtopic:e.target.value})\n  }\n\n  changeEditValue(event){\n   this.setState({newEditValue:event.target.value})\n  }\n\n  async componentDidMount(){\n\n    this.getData()\n\n    window.addEventListener(\"keyup\",()=>{\n      let editobj = document.getElementById('e' +this.state.editingObj);\n\n      if(editobj!=null){\n        editobj.focus()\n        editobj.selectionStart=this.state.editPos[0];\n        editobj.selectionEnd=this.state.editPos[1];\n      }\n\n    })\n    \n  }\n\n\n  async getData(){\n    axios.get(domain + '/subjects')\n        .then(response =>{   \n            let data = response.data;\n            this.setState({subjects:data, loadingData:false});\n\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n  }\n\n  async updateSubjectData(){\n    axios.get(domain + '/subjects')\n    .then(response =>{   \n        let data = response.data;\n        this.setState({subjectData:data[this.state.activeSubject]});\n\n    })\n    .catch(error =>{\n        //console.log(error) //return error fail to retrieve data\n    })\n  }\n\n  switchTopic(x){\n    this.setState({activeTopic:x})\n\n    let values = [];\n    if(typeof (this.state.subjects[this.state.activeSubject].topics[x]) != 'undefined'){\n      let statementList = this.state.subjects[this.state.activeSubject].topics[x].content;\n      for(let i=0; i<statementList.length; i++){\n        let before = statementList[i].before;\n        let keyword = statementList[i].keyword ==-1?'':this.state.keywords[statementList[i].keyword];\n        let after = this.renderARE(statementList[i].after);\n  \n  \n  \n        values.push(before + ' ' + keyword + ' ' + after);        \n      }\n    }\n\n\n    this.setState({editValues:values});\n\n  }\n\n  renderARE(items){\n    let result =''\n\n    for(let i=0; i<items.length; i++){\n      result+=items[i]\n      if(i!=items.length-1){\n        result+=' + '\n      }\n    }\n\n    return result\n  }\n\n  saveARE(areString){\n    var areArr = areString.split(' + ');\n    return areArr;\n  }\n  \n  loadSubject(x){\n\n    if(this.state.deleteSubjectMode==false){\n      this.setState({activeSubject:x, subjectData:this.state.subjects[x]})\n\n      if(this.props.mode==0){\n        this.setState({subjectFocus:true, flashcardMode:false})\n      }else{\n        this.setState({flashcardMode:true, subjectFocus:false})\n      }\n  \n      //setup editable content...\n      let values = [];\n      \n      let statementList;\n\n      if(this.state.subjects[x].topics[this.state.activeTopic]!=undefined){\n        statementList = this.state.subjects[x].topics[this.state.activeTopic].content;\n        for(let i=0; i<statementList.length; i++){\n          let before = statementList[i].before;\n          let keyword = statementList[i].keyword ==-1?'':this.state.keywords[statementList[i].keyword];\n          let after = this.renderARE(statementList[i].after);\n    \n    \n    \n          values.push(before + ' ' + keyword + ' ' + after);        \n        }\n      }\n\n\n  \n      this.setState({editValues:values});\n    }\n\n\n  }\n\n  updateSubjects=async(e)=>{\n    e.preventDefault();\n    axios.post(domain + '/subjects/',{subjectName:this.state.addSubject})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    this.forceUpdate();\n    this.setState({addSubjectMode:false,addSubject:''})\n    setTimeout(()=>this.getData(),100);\n  }\n\n  updateSubtopics = async(e)=>{\n    e.preventDefault();\n\n    let newsubtopic = this.state.addSubtopic;\n\n    let postAddress = domain + '/subtopics/' + this.state.subjectData._id;\n    axios.post(postAddress,{topicName:newsubtopic})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n    })\n    this.forceUpdate();\n\n\n    let staticTopics = this.state.subjects[this.state.activeSubject].topics;\n    staticTopics.push({\n      topicName:this.state.addSubtopic,\n      content:[]\n    })\n\n    let updatedStaticData= this.state.subjects;\n    updatedStaticData[this.state.activeSubject].topics = staticTopics;\n\n\n    this.setState({addSubtopicMode:false,addSubtopic:'',subjects:updatedStaticData,activeTopic:this.state.activeTopic+1});\n    \n    this.switchTopic(this.state.activeTopic)\n    \n  }\n\n  removeSubtopic=async(e)=>{\n    e.preventDefault()\n\n    let deleteAddress = domain + '/subtopics/' + this.state.subjectData._id;;\n    axios.put(deleteAddress,{deleteIndex:this.state.activeTopic})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n    });\n    \n    this.forceUpdate();\n    setTimeout(()=>this.getData(),100);\n\n\n    let staticTopics = this.state.subjects[this.state.activeSubject].topics;\n\n    staticTopics.splice(this.state.activeTopic,1);\n\n    let updatedStaticData= this.state.subjects;\n    updatedStaticData[this.state.activeSubject].topics = staticTopics;\n\n    this.switchTopic(0)\n    this.setState({subjects:updatedStaticData,activeTopic:0})\n    \n    setTimeout(()=>this.updateSubjectData(),100);\n    this.forceUpdate();\n    \n  }\n\n\n  removeSubject=async(id,e)=>{\n    e.preventDefault();\n    let deleteAddress = domain + '/subjects/' + id;\n    axios.delete(deleteAddress,{id:id})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    this.forceUpdate();\n    //\n    setTimeout(()=>this.getData(),100);\n    this.forceUpdate();\n  }\n\n\n  addEditObj(){\n    if(this.state.newEditValue!=''){\n      this.setState({newEdit:true})\n    \n      let currentValues = this.state.editValues;\n      currentValues.push(this.state.newEditValue);\n  \n      this.setState({editValues:currentValues, newEditValue:'', newEdit:false})\n  \n      var addEditObj = document.getElementById('addEditObj');\n      addEditObj.value = ''\n      addEditObj.focus();\n    }\n\n  }\n\n  saveEdits=async(e)=>{\n    e.preventDefault();\n    //checking which statements contains keyword (is, are, because)\n\n    let updatedStatements = [];\n\n    for(let j=0; j<this.state.editValues.length; j++){\n      let keywordStatement = null; \n      for(let i=0; i<this.state.keywords.length; i++){\n        let keyword = this.state.keywords[i]\n        let keywordIndex = this.state.editValues[j].indexOf(' '+ keyword + ' ')\n\n        if(keywordIndex!=-1){\n          //shows where to cut statements...\n\n          let before = this.state.editValues[j].substring(0,keywordIndex);\n\n          let after = this.state.editValues[j].substring(keywordIndex+keyword.length+2);\n\n          let afterARR = this.saveARE(after);\n          //update keywordStatements\n\n          let updateStatus;\n          if(typeof(this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j])=='undefined'){\n            updateStatus = 0\n          }else if(this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j].status==1){\n            updateStatus = 0\n          }\n          \n          else{\n            updateStatus = this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j].status;\n          }\n\n          //status(for flashcard) definitions... (0 - valid card, 1 - invalid)\n          \n          keywordStatement = {before:before, keyword:i, after:afterARR, status:updateStatus};\n\n          break;\n        }\n        \n      }\n      if(keywordStatement!=null){\n        // keywordStatement.status = this.state.editValues[j]\n\n        updatedStatements.push(keywordStatement)\n      }else{\n        if(!(!this.state.editValues[j].replace(/\\s/g, '').length)){\n          updatedStatements.push({before:this.state.editValues[j], keyword:-1, after:[], status:1})\n        }\n      }\n    }\n    //update database...\n    let currentData = this.state.subjectData;\n\n    \n    currentData.topics[this.state.activeTopic].content = updatedStatements;\n    \n    ////console.log(currentData)\n\n    let putAddress = domain + '/subjects/' + this.state.subjectData._id;\n    axios.put(putAddress,currentData)\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    \n\n    //return back to menu\n    this.setState({editMode:false, editValues:[]})\n    this.forceUpdate();\n    this.switchTopic(this.state.activeTopic)\n    this.forceUpdate();\n  }\n\n\n  loadFlashcardDeck(x){\n    this.forceUpdate();\n    let deckData = this.state.subjectData.topics[x].content;\n\n    let finalDeckData = []\n\n    for(let i=0; i<deckData.length; i++){\n      if(deckData[i].status!=1){\n        finalDeckData.push(deckData[i])\n      }\n    }\n\n    let zPos = [];\n    let doneCards = [];\n\n    for(let z=0; z<finalDeckData.length; z++){\n      zPos.push(z);\n      doneCards.push('grid');\n    }\n\n    this.setState({flashcardDeck:finalDeckData, flashcardZPos:zPos, doneCards:doneCards, openDeck:true})\n  }\n\n  rotateFlashcard(doneCard){\n    //doneCard is boolean value\n    //check if card is 'good' or 'again' for user...\n\n    if(doneCard){\n      //get card index using the zpos...\n      //ie if [2,3,4,0,1]...current top card is at index 3 which is 4 the greatest number...\n      //the gratest number = length of zpos array-1\n\n      let cardIndex = this.state.flashcardZPos.indexOf(this.state.flashcardZPos.length-1);\n\n      //now update the doneCards array...to display none at cardIndex\n\n      let currentCards = this.state.doneCards;\n      currentCards[cardIndex] = 'none';\n\n      let doneCount = this.state.doneCount;\n      doneCount++;\n\n      this.setState({doneCards:currentCards,doneCount:doneCount}) \n    }\n\n    //finally rotate the card z positions...no matter if it is 'good' or 'again'\n    let currentZpos = this.state.flashcardZPos;\n    let topZpos = currentZpos[0];\n    currentZpos.shift();\n    \n    currentZpos.push(topZpos);\n\n    this.setState({flashcardZPos:currentZpos, cardReveal:false})\n\n  }\n\n  progressBar(){\n\n    let template = 'repeat(' + this.state.doneCards.length + ',1fr)'\n\n    let style = {\n      gridTemplateColumns: template\n    }\n\n    return style;\n  }\n\n  progressBarInner(){\n    let gridColumn;\n\n    let style;\n\n    if(this.state.doneCount==0){\n      style = {\n        background:'transparent'\n      }\n    }else{\n      gridColumn= '1/' + (this.state.doneCount + 1);\n\n      style = {\n        gridColumn: gridColumn\n      }\n    }\n    return style;\n  }\n\n  flashcardQuestion(key){\n\n    let premodifer;\n\n    if(key==2){\n      premodifer = 'Why '\n    }else{\n      premodifer = 'What ' + this.state.keywords[key] + ' '\n    }\n\n    return premodifer\n  }\n\n  render(){\n\n    let renderSubjects;\n    if (this.state.loadingData==false && this.state.flashcardMode==false){\n      renderSubjects = this.state.subjects.map((subject,x) =>\n        <a \n        className='subjectItem' \n        key={uniqid()} \n        style={this.props.mode==0?{background: 'linear-gradient(to bottom, royalblue, royalblue 60%, #d3d3d3 60%, #d3d3d3 100%)'}:{background: 'linear-gradient(to bottom, red, red 60%, #d3d3d3 60%, #d3d3d3 100%)'}}\n        onClick={()=>{this.loadSubject(x)}}\n        >\n\n          <button \n          style = {this.state.deleteSubjectMode?{display:'grid'}:{display:'none'}}\n          className=\"deleteSubject\" onClick={(e)=>this.removeSubject(subject._id,e)}><span>X</span></button>\n          \n          <p>{subject.subjectName}</p>\n\n          <p style={this.props.mode==0?{color:\"royalblue\"}:{color:'red'}}\n          >{subject.topics.length} Topics</p>\n  \n\n        </a>\n     \n        )\n    }\n\n\n\n    let focusMenu;\n    if(this.state.subjectFocus){\n      let subtopics = this.state.subjectData.topics;\n      focusMenu = subtopics.map((item,x) =>\n        <a key={uniqid()} onClick={()=>this.switchTopic(x)}>{item.topicName}</a>\n      );\n    }\n\n\n\n\n    let content;\n\n    if((this.state.subjectFocus)&&(this.state.subjectData.topics[this.state.activeTopic]!=undefined)){\n      let statementList = this.state.subjectData.topics[this.state.activeTopic].content;\n      content = statementList.map((statement, x)=>\n        <div className='contentObj' key={uniqid()}>\n          <p>{statement.before}&nbsp;\n          {statement.keyword==-1?(<span style={{display:'none'}}></span>):(<span>{this.state.keywords[statement.keyword]}</span>)}\n          &nbsp;{this.renderARE(statement.after)}</p>\n        </div>\n      )\n    }\n\n\n    let editContent;\n    \n\n    //gen array of changeable 'values' in state...\n    if(this.state.editMode){\n      editContent = this.state.editValues.map((editvalue,x)=>\n        <div className='editObj' key={uniqid()} >\n          <textarea id={'e'+x} key={uniqid()} type=\"text\" value={editvalue} onChange={(e)=>this.handleChange(x,e)}/> \n\n        </div>\n\n      )\n\n    }\n\n\n\n\n    let flashcardTopicMenu;\n\n    if(this.state.flashcardMode){\n      flashcardTopicMenu = this.state.subjectData.topics.map((topic, x)=>\n        <a className='flashCardTopicItem' key={uniqid()} onClick={()=>this.loadFlashcardDeck(x)}>\n          <p style={{color:'white'}}>{topic.topicName}</p>\n          <p style={{color:'red'}}>{topic.content.length} cards</p>\n        </a>\n      )\n    }\n\n\n\n\n    let flashcardDeck;\n\n    if(this.state.openDeck){\n      flashcardDeck = this.state.flashcardDeck.map((card, x)=>\n        <div key={uniqid()} \n        className='flashcard' \n        style={{display:this.state.doneCards[x] ,zIndex:this.state.flashcardZPos[x], position:'absolute',top:0, left:0}}\n        onClick={()=>{this.setState({cardReveal:true})}}>\n          {this.state.cardReveal?(\n          <p>\n            {card.after}\n          </p>):\n          \n          (<p>\n            {this.flashcardQuestion(card.keyword)}\n            {card.before}?\n          </p>)}\n          \n        </div>\n      )\n    }\n\n\n\n// {/* mode this.props ==mode */}\n    return(\n\n      <div style={{display:'grid'}}>\n\n        {this.state.subjectFocus==false?(\n\n          <div className='subjectWrapper'  style={this.state.flashcardMode?{display:'none'}:{}}>\n\n            <button \n            onClick={()=>this.setState({deleteSubjectMode:true})} \n            className=\"editSubjects\"\n            style={this.state.deleteSubjectMode?{display:'none'}:{display:'initial'}}\n            >edit</button>\n\n            <button\n             onClick={()=>this.setState({deleteSubjectMode:false})} \n            className=\"editSubjects\"\n            style={!this.state.deleteSubjectMode?{display:'none'}:{display:'initial'}}\n            >done</button>\n\n                      \n            {this.state.loadingData || !this.state.subjects ?(<div></div>):(\n\n            <div className='subjectItemWrapper'>\n              {renderSubjects}\n              <a className=\"subjectItem addSubjectItem\" onClick={()=>this.setState({addSubjectMode:true})}>\n\n                {this.state.addSubjectMode?(\n                <form onSubmit={this.updateSubjects}>\n                  <input className=\"addSubjectInput\" type=\"text\" value={this.state.addSubject} onChange={this.addSubject}></input>\n                  <button type=\"submit\">Add</button>\n                </form>):(<p>+</p>)}\n\n              </a>\n            </div>   \n\n            )}\n          </div>\n        ):(\n\n          <div className='subjectContentWrapper'>\n\n            {this.state.editMode==false?(\n            <div className='focusMenu' style={this.props.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n              <button className ='backButton' onClick={()=>this.setState({subjectFocus:false, activeTopic:0})}>Back</button>\n              {focusMenu}\n              <form onSubmit={this.updateSubtopics} class=\"addSubtopicForm\">\n                <textarea\n                value={this.state.addSubtopic}\n                onChange={(e)=>this.addSubtopic(e)}\n                onFocus={()=>this.setState({addSubtopicMode:true})}\n                >\n                \n                \n\n                </textarea>\n                <button \n                type=\"submit\"\n                style={((this.state.addSubtopicMode)&&(this.state.addSubtopic.length>0))?{background: 'white', pointerEvents:'initial',borderColor:'white',color:'blue'}:{bacgkround: 'grey', pointerEvents:'none',borderColor:'grey',color:'grey'}}>Add</button>\n              </form>\n            </div>\n\n            ):(\n            <div className='focusMenu' style={this.props.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n              <div></div>\n              <a style={{pointerEvents:'none'}}>{this.state.subjectData.topics[this.state.activeTopic].topicName}</a>\n            </div>\n            )}\n\n\n\n            {this.state.editMode==false?(<div className='content'>{content}</div>):\n            \n            (<form className='editContent' onSubmit={this.saveEdits}>\n              \n              {editContent}\n              \n              <div className='editObj'>\n                <textarea\n                style={this.state.newEdit?{}:{border:'1px solid grey', borderRadius:'25px'}} \n                onBlur={this.addEditObj} id={'addEditObj'} \n                type=\"text\"\n                 value={this.newEditValue} \n                 onChange={(e)=>this.changeEditValue(e)}/> \n              </div>\n\n              <div className='editObj' style={this.state.newEditValue==false?{pointerEvents:'none'}:{}}>\n                <textarea \n                style={this.state.newEdit?{border:'1px solid grey', borderRadius:'25px'}:{}} \n                onClick={this.addEditObj} id={this.state.editValues.length-1} type=\"text\" \n                value={this.newEditValue} \n                onChange={(e)=>this.changeEditValue(e)}/> \n              </div>\n\n              <div className='contentButton submitButton'>\n                <button type=\"submit\" style={{alignSelf:'center'}}>Save</button>\n              </div>\n\n            </form>)}\n            \n\n            {this.state.editMode==false?(\n            <div className='contentButton'>\n              <button onClick={()=>{this.setState({editMode:true})}} style={{alignSelf:'flex-end'}}>Edit</button>\n              <button onClick={this.removeSubtopic}>Delete</button>\n            </div>\n            ):(<div style={{display:'none'}}></div>)}\n\n\n          </div>\n\n        )}\n\n        {/* flashcard section.... */}\n\n        {this.state.flashcardMode==true?(\n\n          <div className='flashCardWrapper'>\n                      \n            {this.state.loadingData ?(<div></div>):(\n              \n              <div className='flashCardItemWrapper'>\n                <div className=\"exitFlashcards\">\n                  <button style={this.state.openDeck?{display:'none'}:{}} onClick={()=>this.setState({flashcardMode:false,})}>Back</button>\n                  <button style={this.state.openDeck==false?{display:'none'}:{}} \n                  onClick={()=>this.setState({\n                      openDeck:false,\n                      flashcardZPos: [],\n                      doneCards: [],\n                      doneCount:0\n                    \n                    })}>Done</button>\n                </div>\n\n                \n                {this.state.openDeck==false?flashcardTopicMenu:(\n                <div style={{position:'relative', gridColumn:'1/10'}}>\n\n                  <div className=\"progressBar\" style={this.progressBar()}>\n                    <div className=\"bar\" style={this.progressBarInner()}></div>\n                  </div>\n\n                  {flashcardDeck}\n                  <div className=\"flashCardButtons\" style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{pointerEvents:'none'}:{}}>\n                    <button style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{color:'grey', borderColor:'grey'}:{}} onClick={()=>this.rotateFlashcard(false)}>Again</button>\n                    <button style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{color:'grey', borderColor:'grey'}:{}} onClick={()=>this.rotateFlashcard(true)}>Good</button>\n\n\n                    \n\n                  </div>\n\n                  <div style={this.state.doneCount==this.state.doneCards.length?{display:'grid'}:{display:'none'}} className=\"completeDeck\">\n                    <h1>Congrats!</h1>\n                    <p>You have completed this deck</p>\n                  </div>\n\n\n                </div>)}\n                \n                \n\n              </div>  \n\n\n\n            )}\n\n          </div>):<div></div>}\n\n          \n\n      </div>\n      \n\n    )\n  }\n}\n\nexport default Menu;\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":95,"column":26,"nodeType":"127","messageId":"128","endLine":95,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":98,"column":64,"nodeType":"127","messageId":"128","endLine":98,"endColumn":66},{"ruleId":"125","severity":1,"message":"126","line":141,"column":48,"nodeType":"127","messageId":"128","endLine":141,"endColumn":50},{"ruleId":"125","severity":1,"message":"129","line":160,"column":11,"nodeType":"127","messageId":"128","endLine":160,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":175,"column":36,"nodeType":"127","messageId":"128","endLine":175,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":178,"column":25,"nodeType":"127","messageId":"128","endLine":178,"endColumn":27},{"ruleId":"125","severity":1,"message":"129","line":189,"column":63,"nodeType":"127","messageId":"128","endLine":189,"endColumn":65},{"ruleId":"125","severity":1,"message":"126","line":193,"column":50,"nodeType":"127","messageId":"128","endLine":193,"endColumn":52},{"ruleId":"125","severity":1,"message":"129","line":306,"column":31,"nodeType":"127","messageId":"128","endLine":306,"endColumn":33},{"ruleId":"125","severity":1,"message":"129","line":333,"column":24,"nodeType":"127","messageId":"128","endLine":333,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":346,"column":114,"nodeType":"127","messageId":"128","endLine":346,"endColumn":116},{"ruleId":"125","severity":1,"message":"129","line":405,"column":28,"nodeType":"127","messageId":"128","endLine":405,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":470,"column":28,"nodeType":"127","messageId":"128","endLine":470,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":488,"column":11,"nodeType":"127","messageId":"128","endLine":488,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":500,"column":31,"nodeType":"127","messageId":"128","endLine":500,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":500,"column":66,"nodeType":"127","messageId":"128","endLine":500,"endColumn":68},{"ruleId":"130","severity":1,"message":"131","line":502,"column":9,"nodeType":"132","endLine":507,"endColumn":10},{"ruleId":"125","severity":1,"message":"126","line":505,"column":31,"nodeType":"127","messageId":"128","endLine":505,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":515,"column":36,"nodeType":"127","messageId":"128","endLine":515,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":530,"column":9,"nodeType":"132","endLine":530,"endColumn":61},{"ruleId":"125","severity":1,"message":"129","line":539,"column":89,"nodeType":"127","messageId":"128","endLine":539,"endColumn":91},{"ruleId":"125","severity":1,"message":"126","line":544,"column":29,"nodeType":"127","messageId":"128","endLine":544,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":573,"column":9,"nodeType":"132","endLine":573,"endColumn":98},{"ruleId":"125","severity":1,"message":"126","line":612,"column":33,"nodeType":"127","messageId":"128","endLine":612,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":633,"column":15,"nodeType":"132","endLine":633,"endColumn":108},{"ruleId":"125","severity":1,"message":"126","line":650,"column":33,"nodeType":"127","messageId":"128","endLine":650,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":651,"column":62,"nodeType":"127","messageId":"128","endLine":651,"endColumn":64},{"ruleId":"125","severity":1,"message":"126","line":671,"column":62,"nodeType":"127","messageId":"128","endLine":671,"endColumn":64},{"ruleId":"130","severity":1,"message":"131","line":673,"column":15,"nodeType":"132","endLine":673,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":679,"column":33,"nodeType":"127","messageId":"128","endLine":679,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":694,"column":70,"nodeType":"127","messageId":"128","endLine":694,"endColumn":72},{"ruleId":"125","severity":1,"message":"126","line":709,"column":33,"nodeType":"127","messageId":"128","endLine":709,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":723,"column":34,"nodeType":"127","messageId":"128","endLine":723,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":732,"column":53,"nodeType":"127","messageId":"128","endLine":732,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":743,"column":37,"nodeType":"127","messageId":"128","endLine":743,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":751,"column":82,"nodeType":"127","messageId":"128","endLine":751,"endColumn":84},{"ruleId":"125","severity":1,"message":"126","line":752,"column":58,"nodeType":"127","messageId":"128","endLine":752,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":753,"column":58,"nodeType":"127","messageId":"128","endLine":753,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":760,"column":51,"nodeType":"127","messageId":"128","endLine":760,"endColumn":53},{"ruleId":"121","replacedBy":"133"},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","severity":1,"message":"126","line":95,"column":26,"nodeType":"127","messageId":"128","endLine":95,"endColumn":28},{"ruleId":"125","severity":1,"message":"126","line":98,"column":64,"nodeType":"127","messageId":"128","endLine":98,"endColumn":66},{"ruleId":"125","severity":1,"message":"126","line":141,"column":48,"nodeType":"127","messageId":"128","endLine":141,"endColumn":50},{"ruleId":"125","severity":1,"message":"129","line":160,"column":11,"nodeType":"127","messageId":"128","endLine":160,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":175,"column":36,"nodeType":"127","messageId":"128","endLine":175,"endColumn":38},{"ruleId":"125","severity":1,"message":"126","line":178,"column":25,"nodeType":"127","messageId":"128","endLine":178,"endColumn":27},{"ruleId":"125","severity":1,"message":"129","line":189,"column":63,"nodeType":"127","messageId":"128","endLine":189,"endColumn":65},{"ruleId":"125","severity":1,"message":"126","line":193,"column":50,"nodeType":"127","messageId":"128","endLine":193,"endColumn":52},{"ruleId":"125","severity":1,"message":"129","line":306,"column":31,"nodeType":"127","messageId":"128","endLine":306,"endColumn":33},{"ruleId":"125","severity":1,"message":"129","line":333,"column":24,"nodeType":"127","messageId":"128","endLine":333,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":346,"column":114,"nodeType":"127","messageId":"128","endLine":346,"endColumn":116},{"ruleId":"125","severity":1,"message":"129","line":405,"column":28,"nodeType":"127","messageId":"128","endLine":405,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":470,"column":28,"nodeType":"127","messageId":"128","endLine":470,"endColumn":30},{"ruleId":"125","severity":1,"message":"126","line":488,"column":11,"nodeType":"127","messageId":"128","endLine":488,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":500,"column":31,"nodeType":"127","messageId":"128","endLine":500,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":500,"column":66,"nodeType":"127","messageId":"128","endLine":500,"endColumn":68},{"ruleId":"130","severity":1,"message":"131","line":502,"column":9,"nodeType":"132","endLine":507,"endColumn":10},{"ruleId":"125","severity":1,"message":"126","line":505,"column":31,"nodeType":"127","messageId":"128","endLine":505,"endColumn":33},{"ruleId":"125","severity":1,"message":"126","line":515,"column":36,"nodeType":"127","messageId":"128","endLine":515,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":530,"column":9,"nodeType":"132","endLine":530,"endColumn":61},{"ruleId":"125","severity":1,"message":"129","line":539,"column":89,"nodeType":"127","messageId":"128","endLine":539,"endColumn":91},{"ruleId":"125","severity":1,"message":"126","line":544,"column":29,"nodeType":"127","messageId":"128","endLine":544,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":573,"column":9,"nodeType":"132","endLine":573,"endColumn":98},{"ruleId":"125","severity":1,"message":"126","line":612,"column":33,"nodeType":"127","messageId":"128","endLine":612,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":633,"column":15,"nodeType":"132","endLine":633,"endColumn":108},{"ruleId":"125","severity":1,"message":"126","line":650,"column":33,"nodeType":"127","messageId":"128","endLine":650,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":651,"column":62,"nodeType":"127","messageId":"128","endLine":651,"endColumn":64},{"ruleId":"125","severity":1,"message":"126","line":671,"column":62,"nodeType":"127","messageId":"128","endLine":671,"endColumn":64},{"ruleId":"130","severity":1,"message":"131","line":673,"column":15,"nodeType":"132","endLine":673,"endColumn":49},{"ruleId":"125","severity":1,"message":"126","line":679,"column":33,"nodeType":"127","messageId":"128","endLine":679,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":694,"column":70,"nodeType":"127","messageId":"128","endLine":694,"endColumn":72},{"ruleId":"125","severity":1,"message":"126","line":709,"column":33,"nodeType":"127","messageId":"128","endLine":709,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":723,"column":34,"nodeType":"127","messageId":"128","endLine":723,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":732,"column":53,"nodeType":"127","messageId":"128","endLine":732,"endColumn":55},{"ruleId":"125","severity":1,"message":"126","line":743,"column":37,"nodeType":"127","messageId":"128","endLine":743,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":751,"column":82,"nodeType":"127","messageId":"128","endLine":751,"endColumn":84},{"ruleId":"125","severity":1,"message":"126","line":752,"column":58,"nodeType":"127","messageId":"128","endLine":752,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":753,"column":58,"nodeType":"127","messageId":"128","endLine":753,"endColumn":60},{"ruleId":"125","severity":1,"message":"126","line":760,"column":51,"nodeType":"127","messageId":"128","endLine":760,"endColumn":53},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["135"],["136"],"no-global-assign","no-unsafe-negation"]