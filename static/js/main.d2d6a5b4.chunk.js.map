{"version":3,"sources":["components/Menu.js","App.js","reportWebVitals.js","index.js"],"names":["domain","Menu","props","updateSubjects","e","a","preventDefault","axios","post","subjectName","state","addSubject","then","response","catch","error","forceUpdate","setState","addSubjectMode","setTimeout","getData","updateSubtopics","newsubtopic","addSubtopic","postAddress","subjectData","_id","topicName","staticTopics","subjects","activeSubject","topics","push","content","updatedStaticData","addSubtopicMode","activeTopic","switchTopic","removeSubtopic","deleteAddress","put","deleteIndex","splice","updateSubjectData","removeSubject","id","delete","saveEdits","updatedStatements","j","editValues","length","keywordStatement","i","keywords","keyword","keywordIndex","indexOf","before","substring","after","afterARR","saveARE","updateStatus","status","replace","currentData","putAddress","editMode","loggedIn","loadingData","newSubject","subjectFocus","deleteSubjectMode","editingObj","editPos","newEdit","newEditValue","flashcardMode","flashcardDeck","activeDeck","openDeck","flashcardZPos","doneCards","doneCount","cardReveal","bind","handleChange","changeEditValue","addEditObj","loadFlashcardDeck","rotateFlashcard","x","event","currentValues","this","target","value","selectionStart","selectionEnd","window","addEventListener","editobj","document","getElementById","focus","get","data","console","log","values","statementList","renderARE","items","result","areString","split","mode","undefined","deckData","finalDeckData","zPos","z","doneCard","cardIndex","currentCards","currentZpos","topZpos","shift","gridTemplateColumns","background","gridColumn","key","renderSubjects","focusMenu","editContent","flashcardTopicMenu","map","subject","className","style","onClick","loadSubject","display","color","uniqid","item","statement","editvalue","type","onChange","topic","card","zIndex","position","top","left","flashcardQuestion","onSubmit","backgroundColor","class","onFocus","pointerEvents","borderColor","bacgkround","border","borderRadius","onBlur","alignSelf","progressBar","progressBarInner","React","Component","App","login","password","res","passwordCorrect","wrongPassword","err","loginStatus","login_status","logOut","toggleMenu","passwordFieldChange","onLoad","width","justifySelf","fontSize","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d2d6a5b4.chunk.js","sourcesContent":["import React from 'react';\nimport './Menu.css';\nimport uniqid from 'uniqid'\nimport axios from 'axios';\n\nconst domain = 'http://3.12.162.222'\n//const domain = 'http://localhost:8080'\n\nclass Menu extends React.Component {\n  \n  \n  constructor(props){\n    super(props)\n    this.state = {\n        loggedIn: this.props.loggedIn,\n        loadingData: true,\n        subjects:null,\n        newSubject:'',\n\n\n        subjectFocus:false,\n        subjectData: null,\n        activeSubject: 0,\n        activeTopic: 0,\n\n        addSubjectMode: false,\n        addSubject:'',\n        deleteSubjectMode: false,\n\n        addSubtopicMode: false,\n        addSubtopic:'',\n        \n\n        keywords: ['is','are','because'],\n\n        editMode: false,\n        editValues: [], //for editing input in react...\n        editingObj: -1,\n        editPos: [0,0],  \n        newEdit: false,\n        newEditValue: '',\n\n        flashcardMode: false,\n        flashcardDeck:[],\n        activeDeck: 0,\n        openDeck: false,\n        flashcardZPos: [],\n        doneCards: [],\n        doneCount:0,\n        cardReveal:false\n\n    }\n    this.addSubject = this.addSubject.bind(this);\n    // this.cancelAddSubject.bind = this.cancelAddSubject.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.changeEditValue = this.changeEditValue.bind(this);\n    this.updateSubjects = this.updateSubjects.bind(this);\n\n\n    this.addSubtopic = this.addSubtopic.bind(this);\n    this.removeSubtopic = this.removeSubtopic.bind(this);\n\n    this.updateSubtopics = this.updateSubtopics.bind(this);\n    this.removeSubject = this.removeSubject.bind(this);\n    this.addEditObj = this.addEditObj.bind(this);\n    this.loadFlashcardDeck = this.loadFlashcardDeck.bind(this);\n    this.rotateFlashcard = this.rotateFlashcard.bind(this);\n\n  }\n\n  handleChange(x,event){\n    let currentValues = this.state.editValues;\n    currentValues[x] = event.target.value;\n\n    this.setState({editValues:currentValues, editingObj:x, editPos:[event.target.selectionStart,event.target.selectionEnd]})\n\n  }\n\n  addSubject(e){\n    this.setState({addSubject:e.target.value})\n  }\n\n  addSubtopic(e){\n    this.setState({addSubtopic:e.target.value})\n  }\n\n  changeEditValue(event){\n   this.setState({newEditValue:event.target.value})\n  }\n\n  async componentDidMount(){\n\n    this.getData()\n\n    window.addEventListener(\"keyup\",()=>{\n      let editobj = document.getElementById('e' +this.state.editingObj);\n\n      if(editobj!=null){\n        editobj.focus()\n        editobj.selectionStart=this.state.editPos[0];\n        editobj.selectionEnd=this.state.editPos[1];\n      }\n\n    })\n    \n  }\n\n\n  async getData(){\n    axios.get(domain + '/subjects')\n        .then(response =>{   \n            let data = response.data;\n            this.setState({subjects:data, loadingData:false});\n\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n  }\n\n  async updateSubjectData(){\n    axios.get(domain + '/subjects')\n    .then(response =>{   \n        let data = response.data;\n        this.setState({subjectData:data[this.state.activeSubject]});\n\n    })\n    .catch(error =>{\n        //console.log(error) //return error fail to retrieve data\n    })\n  }\n\n  switchTopic(x){\n    this.setState({activeTopic:x})\n\n    let values = [];\n    if(typeof (this.state.subjects[this.state.activeSubject].topics[x]) != 'undefined'){\n      let statementList = this.state.subjects[this.state.activeSubject].topics[x].content;\n      for(let i=0; i<statementList.length; i++){\n        let before = statementList[i].before;\n        let keyword = statementList[i].keyword ==-1?'':this.state.keywords[statementList[i].keyword];\n        let after = this.renderARE(statementList[i].after);\n  \n  \n  \n        values.push(before + ' ' + keyword + ' ' + after);        \n      }\n    }\n\n\n    this.setState({editValues:values});\n\n  }\n\n  renderARE(items){\n    let result =''\n\n    for(let i=0; i<items.length; i++){\n      result+=items[i]\n      if(i!=items.length-1){\n        result+=' + '\n      }\n    }\n\n    return result\n  }\n\n  saveARE(areString){\n    var areArr = areString.split(' + ');\n    return areArr;\n  }\n  \n  loadSubject(x){\n\n    if(this.state.deleteSubjectMode==false){\n      this.setState({activeSubject:x, subjectData:this.state.subjects[x]})\n\n      if(this.props.mode==0){\n        this.setState({subjectFocus:true, flashcardMode:false})\n      }else{\n        this.setState({flashcardMode:true, subjectFocus:false})\n      }\n  \n      //setup editable content...\n      let values = [];\n      \n      let statementList;\n\n      if(this.state.subjects[x].topics[this.state.activeTopic]!=undefined){\n        statementList = this.state.subjects[x].topics[this.state.activeTopic].content;\n        for(let i=0; i<statementList.length; i++){\n          let before = statementList[i].before;\n          let keyword = statementList[i].keyword ==-1?'':this.state.keywords[statementList[i].keyword];\n          let after = this.renderARE(statementList[i].after);\n    \n    \n    \n          values.push(before + ' ' + keyword + ' ' + after);        \n        }\n      }\n\n\n  \n      this.setState({editValues:values});\n    }\n\n\n  }\n\n  updateSubjects=async(e)=>{\n    e.preventDefault();\n    axios.post(domain + '/subjects/',{subjectName:this.state.addSubject})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    this.forceUpdate();\n    this.setState({addSubjectMode:false,addSubject:''})\n    setTimeout(()=>this.getData(),100);\n    this.forceUpdate();\n\n  }\n\n  updateSubtopics = async(e)=>{\n    e.preventDefault();\n\n    let newsubtopic = this.state.addSubtopic;\n\n    let postAddress = domain + '/subtopics/' + this.state.subjectData._id;\n    axios.post(postAddress,{topicName:newsubtopic})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n    })\n    this.forceUpdate();\n\n\n    let staticTopics = this.state.subjects[this.state.activeSubject].topics;\n    staticTopics.push({\n      topicName:this.state.addSubtopic,\n      content:[]\n    })\n\n    let updatedStaticData= this.state.subjects;\n    updatedStaticData[this.state.activeSubject].topics = staticTopics;\n\n\n    this.setState({addSubtopicMode:false,addSubtopic:'',subjects:updatedStaticData,activeTopic:this.state.activeTopic+1});\n    \n    this.switchTopic(this.state.activeTopic)\n    \n  }\n\n  removeSubtopic=async(e)=>{\n    e.preventDefault()\n\n    let deleteAddress = domain + '/subtopics/' + this.state.subjectData._id;;\n    axios.put(deleteAddress,{deleteIndex:this.state.activeTopic})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n    });\n    \n    this.forceUpdate();\n    setTimeout(()=>this.getData(),100);\n\n\n    let staticTopics = this.state.subjects[this.state.activeSubject].topics;\n\n    staticTopics.splice(this.state.activeTopic,1);\n\n    let updatedStaticData= this.state.subjects;\n    updatedStaticData[this.state.activeSubject].topics = staticTopics;\n\n    this.switchTopic(0)\n    this.setState({subjects:updatedStaticData,activeTopic:0})\n    \n    setTimeout(()=>this.updateSubjectData(),100);\n    setTimeout(()=>this.getData(),100);\n    this.forceUpdate();\n    \n  }\n\n\n  removeSubject=async(id,e)=>{\n    e.preventDefault();\n    let deleteAddress = domain + '/subjects/' + id;\n    axios.delete(deleteAddress,{id:id})\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    this.forceUpdate();\n    //\n    setTimeout(()=>this.getData(),100);\n    this.forceUpdate();\n  }\n\n\n  addEditObj(){\n    if(this.state.newEditValue!=''){\n      this.setState({newEdit:true})\n    \n      let currentValues = this.state.editValues;\n      currentValues.push(this.state.newEditValue);\n  \n      this.setState({editValues:currentValues, newEditValue:'', newEdit:false})\n  \n      var addEditObj = document.getElementById('addEditObj');\n      addEditObj.value = ''\n      addEditObj.focus();\n    }\n\n  }\n\n  saveEdits=async(e)=>{\n    e.preventDefault();\n    //checking which statements contains keyword (is, are, because)\n\n    let updatedStatements = [];\n\n    for(let j=0; j<this.state.editValues.length; j++){\n      let keywordStatement = null; \n      for(let i=0; i<this.state.keywords.length; i++){\n        let keyword = this.state.keywords[i]\n        let keywordIndex = this.state.editValues[j].indexOf(' '+ keyword + ' ')\n\n        if(keywordIndex!=-1){\n          //shows where to cut statements...\n\n          let before = this.state.editValues[j].substring(0,keywordIndex);\n\n          let after = this.state.editValues[j].substring(keywordIndex+keyword.length+2);\n\n          let afterARR = this.saveARE(after);\n          //update keywordStatements\n\n          let updateStatus;\n          if(typeof(this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j])=='undefined'){\n            updateStatus = 0\n          }else if(this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j].status==1){\n            updateStatus = 0\n          }\n          \n          else{\n            updateStatus = this.state.subjects[this.state.activeSubject].topics[this.state.activeTopic].content[j].status;\n          }\n\n          //status(for flashcard) definitions... (0 - valid card, 1 - invalid)\n          \n          keywordStatement = {before:before, keyword:i, after:afterARR, status:updateStatus};\n\n          break;\n        }\n        \n      }\n      if(keywordStatement!=null){\n        // keywordStatement.status = this.state.editValues[j]\n\n        updatedStatements.push(keywordStatement)\n      }else{\n        if(!(!this.state.editValues[j].replace(/\\s/g, '').length)){\n          updatedStatements.push({before:this.state.editValues[j], keyword:-1, after:[], status:1})\n        }\n      }\n    }\n    //update database...\n    let currentData = this.state.subjectData;\n\n    \n    currentData.topics[this.state.activeTopic].content = updatedStatements;\n    \n    ////console.log(currentData)\n\n    let putAddress = domain + '/subjects/' + this.state.subjectData._id;\n    axios.put(putAddress,currentData)\n      .then(response => {\n        //console.log(response)\n      })\n      .catch(error =>{\n        //console.log(error)\n      })\n    \n\n    //return back to menu\n    this.setState({editMode:false, editValues:[]})\n    this.forceUpdate();\n    this.switchTopic(this.state.activeTopic)\n    this.forceUpdate();\n  }\n\n\n  loadFlashcardDeck(x){\n    this.forceUpdate();\n    let deckData = this.state.subjectData.topics[x].content;\n\n    let finalDeckData = []\n\n    for(let i=0; i<deckData.length; i++){\n      if(deckData[i].status!=1){\n        finalDeckData.push(deckData[i])\n      }\n    }\n\n    let zPos = [];\n    let doneCards = [];\n\n    for(let z=0; z<finalDeckData.length; z++){\n      zPos.push(z);\n      doneCards.push('grid');\n    }\n\n    this.setState({flashcardDeck:finalDeckData, flashcardZPos:zPos, doneCards:doneCards, openDeck:true})\n  }\n\n  rotateFlashcard(doneCard){\n    //doneCard is boolean value\n    //check if card is 'good' or 'again' for user...\n\n    if(doneCard){\n      //get card index using the zpos...\n      //ie if [2,3,4,0,1]...current top card is at index 3 which is 4 the greatest number...\n      //the gratest number = length of zpos array-1\n\n      let cardIndex = this.state.flashcardZPos.indexOf(this.state.flashcardZPos.length-1);\n\n      //now update the doneCards array...to display none at cardIndex\n\n      let currentCards = this.state.doneCards;\n      currentCards[cardIndex] = 'none';\n\n      let doneCount = this.state.doneCount;\n      doneCount++;\n\n      this.setState({doneCards:currentCards,doneCount:doneCount}) \n    }\n\n    //finally rotate the card z positions...no matter if it is 'good' or 'again'\n    let currentZpos = this.state.flashcardZPos;\n    let topZpos = currentZpos[0];\n    currentZpos.shift();\n    \n    currentZpos.push(topZpos);\n\n    this.setState({flashcardZPos:currentZpos, cardReveal:false})\n\n  }\n\n  progressBar(){\n\n    let template = 'repeat(' + this.state.doneCards.length + ',1fr)'\n\n    let style = {\n      gridTemplateColumns: template\n    }\n\n    return style;\n  }\n\n  progressBarInner(){\n    let gridColumn;\n\n    let style;\n\n    if(this.state.doneCount==0){\n      style = {\n        background:'transparent'\n      }\n    }else{\n      gridColumn= '1/' + (this.state.doneCount + 1);\n\n      style = {\n        gridColumn: gridColumn\n      }\n    }\n    return style;\n  }\n\n  flashcardQuestion(key){\n\n    let premodifer;\n\n    if(key==2){\n      premodifer = 'Why '\n    }else{\n      premodifer = 'What ' + this.state.keywords[key] + ' '\n    }\n\n    return premodifer\n  }\n\n  render(){\n\n    let renderSubjects;\n    if (this.state.loadingData==false && this.state.flashcardMode==false){\n      renderSubjects = this.state.subjects.map((subject,x) =>\n        <a \n        className='subjectItem' \n        key={uniqid()} \n        style={this.props.mode==0?{background: 'linear-gradient(to bottom, royalblue, royalblue 60%, #d3d3d3 60%, #d3d3d3 100%)'}:{background: 'linear-gradient(to bottom, red, red 60%, #d3d3d3 60%, #d3d3d3 100%)'}}\n        onClick={()=>{this.loadSubject(x)}}\n        >\n\n          <button \n          style = {this.state.deleteSubjectMode?{display:'grid'}:{display:'none'}}\n          className=\"deleteSubject\" onClick={(e)=>this.removeSubject(subject._id,e)}><span>X</span></button>\n          \n          <p>{subject.subjectName}</p>\n\n          <p style={this.props.mode==0?{color:\"royalblue\"}:{color:'red'}}\n          >{subject.topics.length} Topics</p>\n  \n\n        </a>\n     \n        )\n    }\n\n\n\n    let focusMenu;\n    if(this.state.subjectFocus){\n      let subtopics = this.state.subjectData.topics;\n      focusMenu = subtopics.map((item,x) =>\n        <a key={uniqid()} onClick={()=>this.switchTopic(x)}>{item.topicName}</a>\n      );\n    }\n\n\n\n\n    let content;\n\n    if((this.state.subjectFocus)&&(this.state.subjectData.topics[this.state.activeTopic]!=undefined)){\n      let statementList = this.state.subjectData.topics[this.state.activeTopic].content;\n      content = statementList.map((statement, x)=>\n        <div className='contentObj' key={uniqid()}>\n          <p>{statement.before}&nbsp;\n          {statement.keyword==-1?(<span style={{display:'none'}}></span>):(<span>{this.state.keywords[statement.keyword]}</span>)}\n          &nbsp;{this.renderARE(statement.after)}</p>\n        </div>\n      )\n    }\n\n\n    let editContent;\n    \n\n    //gen array of changeable 'values' in state...\n    if(this.state.editMode){\n      editContent = this.state.editValues.map((editvalue,x)=>\n        <div className='editObj' key={uniqid()} >\n          <textarea id={'e'+x} key={uniqid()} type=\"text\" value={editvalue} onChange={(e)=>this.handleChange(x,e)}/> \n\n        </div>\n\n      )\n\n    }\n\n\n\n\n    let flashcardTopicMenu;\n\n    if(this.state.flashcardMode){\n      flashcardTopicMenu = this.state.subjectData.topics.map((topic, x)=>\n        <a className='flashCardTopicItem' key={uniqid()} onClick={()=>this.loadFlashcardDeck(x)}>\n          <p style={{color:'white'}}>{topic.topicName}</p>\n          <p style={{color:'red'}}>{topic.content.length} cards</p>\n        </a>\n      )\n    }\n\n\n\n\n    let flashcardDeck;\n\n    if(this.state.openDeck){\n      flashcardDeck = this.state.flashcardDeck.map((card, x)=>\n        <div key={uniqid()} \n        className='flashcard' \n        style={{display:this.state.doneCards[x] ,zIndex:this.state.flashcardZPos[x], position:'absolute',top:0, left:0}}\n        onClick={()=>{this.setState({cardReveal:true})}}>\n          {this.state.cardReveal?(\n          <p>\n            {card.after}\n          </p>):\n          \n          (<p>\n            {this.flashcardQuestion(card.keyword)}\n            {card.before}?\n          </p>)}\n          \n        </div>\n      )\n    }\n\n\n\n// {/* mode this.props ==mode */}\n    return(\n\n      <div style={{display:'grid'}}>\n\n        {this.state.subjectFocus==false?(\n\n          <div className='subjectWrapper'  style={this.state.flashcardMode?{display:'none'}:{}}>\n\n            <button \n            onClick={()=>this.setState({deleteSubjectMode:true})} \n            className=\"editSubjects\"\n            style={this.state.deleteSubjectMode?{display:'none'}:{display:'initial'}}\n            >edit</button>\n\n            <button\n             onClick={()=>this.setState({deleteSubjectMode:false})} \n            className=\"editSubjects\"\n            style={!this.state.deleteSubjectMode?{display:'none'}:{display:'initial'}}\n            >done</button>\n\n                      \n            {this.state.loadingData || !this.state.subjects ?(<div></div>):(\n\n            <div className='subjectItemWrapper'>\n              {renderSubjects}\n              <a className=\"subjectItem addSubjectItem\" onClick={()=>this.setState({addSubjectMode:true})}>\n\n                {this.state.addSubjectMode?(\n                <form onSubmit={this.updateSubjects}>\n                  <input className=\"addSubjectInput\" type=\"text\" value={this.state.addSubject} onChange={this.addSubject}></input>\n                  <button type=\"submit\">Add</button>\n                </form>):(<p>+</p>)}\n\n              </a>\n            </div>   \n\n            )}\n          </div>\n        ):(\n\n          <div className='subjectContentWrapper'>\n\n            {this.state.editMode==false?(\n            <div className='focusMenu' style={this.props.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n              <button className ='backButton' onClick={()=>this.setState({subjectFocus:false, activeTopic:0})}>Back</button>\n              {focusMenu}\n              <form onSubmit={this.updateSubtopics} class=\"addSubtopicForm\">\n                <textarea\n                value={this.state.addSubtopic}\n                onChange={(e)=>this.addSubtopic(e)}\n                onFocus={()=>this.setState({addSubtopicMode:true})}\n                >\n                \n                \n\n                </textarea>\n                <button \n                type=\"submit\"\n                style={((this.state.addSubtopicMode)&&(this.state.addSubtopic.length>0))?{background: 'white', pointerEvents:'initial',borderColor:'white',color:'blue'}:{bacgkround: 'grey', pointerEvents:'none',borderColor:'grey',color:'grey'}}>Add</button>\n              </form>\n            </div>\n\n            ):(\n            <div className='focusMenu' style={this.props.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n              <div></div>\n              <a style={{pointerEvents:'none'}}>{this.state.subjectData.topics[this.state.activeTopic].topicName}</a>\n            </div>\n            )}\n\n\n\n            {this.state.editMode==false?(<div className='content'>{content}</div>):\n            \n            (<form className='editContent' onSubmit={this.saveEdits}>\n              \n              {editContent}\n              \n              <div className='editObj'>\n                <textarea\n                style={this.state.newEdit?{}:{border:'1px solid grey', borderRadius:'25px'}} \n                onBlur={this.addEditObj} id={'addEditObj'} \n                type=\"text\"\n                 value={this.newEditValue} \n                 onChange={(e)=>this.changeEditValue(e)}/> \n              </div>\n\n              <div className='editObj' style={this.state.newEditValue==false?{pointerEvents:'none'}:{}}>\n                <textarea \n                style={this.state.newEdit?{border:'1px solid grey', borderRadius:'25px'}:{}} \n                onClick={this.addEditObj} id={this.state.editValues.length-1} type=\"text\" \n                value={this.newEditValue} \n                onChange={(e)=>this.changeEditValue(e)}/> \n              </div>\n\n              <div className='contentButton submitButton'>\n                <button type=\"submit\" style={{alignSelf:'center'}}>Save</button>\n              </div>\n\n            </form>)}\n            \n\n            {this.state.editMode==false?(\n            <div className='contentButton'>\n              <button onClick={()=>{this.setState({editMode:true})}} style={{alignSelf:'flex-end'}}>Edit</button>\n              <button onClick={this.removeSubtopic}>Delete</button>\n            </div>\n            ):(<div style={{display:'none'}}></div>)}\n\n\n          </div>\n\n        )}\n\n        {/* flashcard section.... */}\n\n        {this.state.flashcardMode==true?(\n\n          <div className='flashCardWrapper'>\n                      \n            {this.state.loadingData ?(<div></div>):(\n              \n              <div className='flashCardItemWrapper'>\n                <div className=\"exitFlashcards\">\n                  <button style={this.state.openDeck?{display:'none'}:{}} onClick={()=>this.setState({flashcardMode:false,})}>Back</button>\n                  <button style={this.state.openDeck==false?{display:'none'}:{}} \n                  onClick={()=>this.setState({\n                      openDeck:false,\n                      flashcardZPos: [],\n                      doneCards: [],\n                      doneCount:0\n                    \n                    })}>Done</button>\n                </div>\n\n                \n                {this.state.openDeck==false?flashcardTopicMenu:(\n                <div style={{position:'relative', gridColumn:'1/10'}}>\n\n                  <div className=\"progressBar\" style={this.progressBar()}>\n                    <div className=\"bar\" style={this.progressBarInner()}></div>\n                  </div>\n\n                  {flashcardDeck}\n                  <div className=\"flashCardButtons\" style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{pointerEvents:'none'}:{}}>\n                    <button style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{color:'grey', borderColor:'grey'}:{}} onClick={()=>this.rotateFlashcard(false)}>Again</button>\n                    <button style={((this.state.doneCount==this.state.doneCards.length)||(!this.state.cardReveal))?{color:'grey', borderColor:'grey'}:{}} onClick={()=>this.rotateFlashcard(true)}>Good</button>\n\n\n                    \n\n                  </div>\n\n                  <div style={this.state.doneCount==this.state.doneCards.length?{display:'grid'}:{display:'none'}} className=\"completeDeck\">\n                    <h1>Congrats!</h1>\n                    <p>You have completed this deck</p>\n                  </div>\n\n\n                </div>)}\n                \n                \n\n              </div>  \n\n\n\n            )}\n\n          </div>):<div></div>}\n\n          \n\n      </div>\n      \n\n    )\n  }\n}\n\nexport default Menu;\n","import React from 'react';\nimport './App.css';\n\nimport Menu from './components/Menu';\nimport axios from 'axios';\n\nconst domain = 'http://3.12.162.222'\n//const domain = 'http://localhost:8080'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // 0 - notes, 1 - flascard\n      mode: 0,\n      login: false,\n      wrongPassword: false,\n      password: '',\n\n    }\n\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.login = this.login.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.loginStatus = this.loginStatus.bind(this);\n    this.passwordFieldChange = this.passwordFieldChange.bind(this);\n  };\n\n\n  toggleMenu(x){\n    this.setState({mode:x})\n  }\n\n  async componentDidMount(){\n    this.loginStatus();\n  }\n\n\n  login = async(e)=>{\n    e.preventDefault();\n    \n    axios.post(domain+'/login',{password:this.state.password})\n      .then(res => {\n        this.setState({password:''})\n        if(res.data.passwordCorrect){\n          this.setState({login:true})\n        }else{\n          this.setState({wrongPassword:true})\n        }\n\n\n      })\n      .catch(err =>{\n        this.setState({password:''})\n        console.log(err)\n      })\n  }\n\n  loginStatus= async()=>{\n    axios.get(domain+'/loggedIn')\n      .then(res =>{\n        if(res.data.login_status){\n          this.setState({login:true})\n        }else{\n          this.setState({login:false})\n        }\n      })\n      .catch(err =>{\n        console.log(err)\n      })\n  }\n\n  passwordFieldChange(e){\n    this.setState({password:e.target.value})\n  }\n  \n  logOut =async()=>{\n    axios.post(domain+'/logout')\n    .then(res=> {\n      this.setState({login:res.data.login_status, wrongPassword:false, password:''})\n    })\n    .catch(err =>{\n      console.log(err)\n    })\n  }\n  \n  render(){\n    return(\n      <div onLoad = {()=>this.loginStatus()}>\n\n        <button onClick={()=>this.logOut()}class=\"logoutButton\" style={this.state.login?{display:'grid'}:{display:'none'}}><p>Log out</p></button>\n\n        {this.state.login==true?(\n                <div className='contentWrapper'>\n        \n                <div className='sideBar' style={this.state.mode==0?{backgroundColor: 'royalblue'}:{backgroundColor: 'red'}}>\n                  <button style={{alignSelf:'flex-end'}} onClick={()=>this.toggleMenu(0)}>Notes</button>\n                  <button onClick={()=>this.toggleMenu(1)}>Flashcards</button>   \n                </div>\n        \n                {/* blank div for grid column block... */}\n                <div></div> \n        \n                <Menu mode={this.state.mode} loggedIn={this.state.loggedIn}/>\n              </div>\n        ):(\n          <div class=\"loginWrapper\">\n            <p style={{width:'max-content',justifySelf:'center',fontSize:'20px'}}>Welcome Back</p>\n            <form onSubmit={this.login}\n             style={this.state.wrongPassword?{background: 'linear-gradient(white 0%,white 50%, red 50%, red 100%)',borderColor:'red'}:{background: 'linear-gradient(white 0%,white 50%, blue 50%, blue 100%)',borderColor:'blue'}}>\n              <textarea placeholder={!this.state.wrongPassword?('Enter Password'):('Incorrect Password')} value={this.state.password} onChange={this.passwordFieldChange}></textarea>\n              <button type='submit'>login</button>\n            </form>   \n\n          </div>\n        )}\n\n      </div>\n      \n\n\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}